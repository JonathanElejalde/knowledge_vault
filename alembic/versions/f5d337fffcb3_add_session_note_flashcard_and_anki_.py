"""Add session, note, flashcard, and anki models

Revision ID: f5d337fffcb3
Revises: 4018b52df09c
Create Date: 2025-05-21 14:24:53.372638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5d337fffcb3'
down_revision: Union[str, None] = '4018b52df09c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anki_decks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('last_exported', sa.DateTime(), nullable=True),
    sa.Column('export_settings', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_anki_decks_user_id'), 'anki_decks', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('work_duration', sa.Integer(), nullable=False),
    sa.Column('break_duration', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_table('notes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notes_session_id'), 'notes', ['session_id'], unique=False)
    op.create_table('flashcards',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('note_id', sa.Uuid(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('last_reviewed', sa.DateTime(), nullable=True),
    sa.Column('next_review', sa.DateTime(), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flashcards_note_id'), 'flashcards', ['note_id'], unique=False)
    op.create_table('anki_deck_flashcards',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deck_id', sa.Uuid(), nullable=False),
    sa.Column('flashcard_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['deck_id'], ['anki_decks.id'], ),
    sa.ForeignKeyConstraint(['flashcard_id'], ['flashcards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_anki_deck_flashcards_deck_id'), 'anki_deck_flashcards', ['deck_id'], unique=False)
    op.create_index(op.f('ix_anki_deck_flashcards_flashcard_id'), 'anki_deck_flashcards', ['flashcard_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_anki_deck_flashcards_flashcard_id'), table_name='anki_deck_flashcards')
    op.drop_index(op.f('ix_anki_deck_flashcards_deck_id'), table_name='anki_deck_flashcards')
    op.drop_table('anki_deck_flashcards')
    op.drop_index(op.f('ix_flashcards_note_id'), table_name='flashcards')
    op.drop_table('flashcards')
    op.drop_index(op.f('ix_notes_session_id'), table_name='notes')
    op.drop_table('notes')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_anki_decks_user_id'), table_name='anki_decks')
    op.drop_table('anki_decks')
    # ### end Alembic commands ###
