"""Add pgvector extension and embedding column to notes

Revision ID: 0d01ed839b76
Revises: 49dcf2d5c5e4
Create Date: 2025-06-10 12:58:21.599158

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '0d01ed839b76'
down_revision: Union[str, None] = '49dcf2d5c5e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Enable pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notes', sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True))
    op.create_index('idx_notes_embedding_hnsw', 'notes', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_notes_embedding_hnsw', table_name='notes', postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.drop_column('notes', 'embedding')
    # ### end Alembic commands ###
    
    # Note: We don't drop the pgvector extension in downgrade as it might be used by other tables
    # If you want to drop it completely, uncomment the following line:
    # op.execute('DROP EXTENSION IF EXISTS vector')
